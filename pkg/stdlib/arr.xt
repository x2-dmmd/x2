:: Array System Package
:: Version x2.1 - x2.1
:: Made by DmmD

:: Public Methods
:arrFnd
    pop _a1 -@name
    pop _a2 -@value
    pop "$(pop -@name).length" -@length
    psh 0 -@index
    psh -1 -@location
    rep -@length _arrFndLoop
    ret -@location 

:arrIns
    pop _a1 --@name
    pop _a2 --@location
    pop _a3 --@value
    pop _a4 --@new
    pop "$(pop --@name).length" --@length
    psh 0 --@index
    call arrNew --@new -@null
    rep --@length _arrInsLoop
    ret --@new

:arrLen
    pop _a1 -@name
    pop "$(pop -@name).length" -@length
    ret -@length

:arrNew
    pop _a1 -@name
    psh "<arr $(pop -@name)>" "$(pop -@name)"
    psh 0 "$(pop -@name).length"
    ret -@name

:arrPsh
    pop _a1 -@name
    pop _a2 -@value
    pop "$(pop -@name).length" -@length
    psh -@value "$(pop -@name)[$(pop -@length)]"
    inc -@length
    psh -@length "$(pop -@name).length"
    ret -@value

:arrPop
    pop _a1 -@name
    pop "$(pop -@name).length" -@length
    dec -@length
    pop "$(pop -@name)[$(pop -@length)]" -@value
    rem "$(pop -@name)[$(pop -@length)]"
    psh -@length "$(pop -@name).length"
    ret -@value

:arrRem
    pop _a1 --@name
    pop _a2 --@value
    pop _a3 --@new
    pop "$(pop --@name).length" --@length
    psh 0 --@index
    psh 0 --@check
    call arrNew --@new -@null
    rep --@length _arrRemLoop
    ret --@new

:arrRemAll
    pop _a1 --@name
    pop _a2 --@value
    pop _a3 --@new
    pop "$(pop --@name).length" --@length
    psh 0 --@index
    call arrNew --@new -@null
    rep --@length _arrRemAllLoop
    ret --@new

:arrRemAt
    pop _a1 --@name
    pop _a2 --@location
    pop _a3 --@new
    pop "$(pop --@name).length" --@length
    psh 0 --@index
    call arrNew --@new -@null
    rep --@length _arrRemAtLoop
    ret --@new

:: Private Methods
:_arrFndLoop
    pop "$(pop -@name)[$(pop -@index)]" -@current
    evl -@index != "-1" "evl -@current == -@value \"psh -@index -@location\""
    inc -@index

:_arrInsLoop
    evl --@index == --@location "call arrPsh --@new --@value -@null"
    pop "$(pop --@name)[$(pop --@index)]" --@current
    call arrPsh --@new --@current -@null
    inc --@index

:_arrRemLoop
    pop "$(pop --@name)[$(pop --@index)]" --@current
    evl --@check == 0 "jmp _arrRemPsh" "call arrPsh --@new --@current -@null"
    inc --@index

:_arrRemPsh
    evl --@value != --@current "call arrPsh --@new --@current -@null"
    inc --@check

:_arrRemAllLoop
    pop "$(pop --@name)[$(pop --@index)]" --@current
    evl --@current != --@value "call arrPsh --@new --@current -"
    inc --@index

:_arrRemAtLoop
    pop "$(pop --@name)[$(pop --@index)]" --@current
    evl --@index != --@location "call arrPsh --@new --@current -@null"
    inc --@index 